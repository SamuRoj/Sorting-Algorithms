import matplotlib.pyplot as plt
import numpy as np

# data = [
#     [10, 0.6437301635742188, 0.8106231689453125, 0.5960464477539062, 1.3589859008789062, 0.6437301635742188],
#     [20, 1.4781951904296875, 2.8371810913085938, 1.8358230590820312, 3.0517578125, 1.621246337890625],
#     [30, 2.9802322387695312, 5.7697296142578125, 3.814697265625, 5.054473876953125, 5.221366882324219],
#     [40, 9.560585021972656, 11.873245239257812, 8.797645568847656, 6.9141387939453125, 5.507469177246094],
#     [50, 8.296966552734375, 20.647048950195312, 9.799003601074219, 9.036064147949219, 4.3392181396484375],
#     [60, 11.038780212402344, 24.60479736328125, 13.804435729980469, 10.991096496582031, 5.1975250244140625],
#     [70, 16.546249389648438, 32.66334533691406, 18.548965454101562, 23.627281188964844, 6.2465667724609375],
#     [80, 23.555755615234375, 50.711631774902344, 28.753280639648438, 15.6402587890625, 7.510185241699219],
#     [90, 27.72808074951172, 53.33423614501953, 30.040740966796875, 21.886825561523438, 9.894371032714844],
#     [100, 34.45148468017578, 68.02082061767578, 48.70891571044922, 20.265579223632812, 9.989738464355469]
# ]

# data = [
#     [100, 31.065940856933594, 54.86011505126953, 27.96649932861328, 20.599365234375, 10.538101196289062],
#     [200, 138.16356658935547, 247.47848510742188, 146.29364013671875, 47.087669372558594, 23.126602172851562],
#     [300, 292.77801513671875, 545.1440811157227, 240.6597137451172, 71.40636444091797, 34.18922424316406],
#     [400, 564.4798278808594, 991.0106658935547, 447.2017288208008, 113.8925552368164, 53.40576171875],
#     [500, 800.2519607543945, 1522.4218368530273, 952.0292282104492, 130.82027435302734, 66.68567657470703],
#     [600, 1331.5677642822266, 2436.947822570801, 1051.950454711914, 183.9160919189453, 86.3790512084961],
#     [700, 1835.036277770996, 4204.869270324707, 1460.0515365600586, 200.653076171875, 98.56224060058594],
#     [800, 2315.1636123657227, 4514.718055725098, 1875.8773803710938, 229.0487289428711, 116.20521545410156],
#     [900, 2898.9315032958984, 5322.837829589844, 2318.3584213256836, 265.2406692504883, 130.96332550048828],
#     [1000, 3627.5386810302734, 6924.104690551758, 2935.5287551879883, 295.8536148071289, 149.4884490966797]
# ]

data = [
    [1000, 3826.4989852905273, 7327.675819396973, 3325.3908157348633, 306.9639205932617, 152.44483947753906],
    [2000, 15045.571327209473, 30392.050743103027, 12822.413444519043, 840.306282043457, 369.50111389160156],
    [3000, 36111.02104187012, 77754.16374206543, 22793.221473693848, 1086.2112045288086, 397.13382720947266],
    [4000, 50923.58589172363, 98526.85928344727, 38791.537284851074, 1185.9655380249023, 461.33995056152344],
    [5000, 84396.93450927734, 163656.92615509033, 65967.60749816895, 1734.2329025268555, 787.2343063354492],
    [6000, 115768.74256134033, 245220.42274475098, 94599.3423461914, 2021.2411880493164, 1218.1997299194336],
    [7000, 164125.82397460938, 335442.09003448486, 129469.03705596924, 2098.202705383301, 1133.584976196289],
    [8000, 212386.53659820557, 424059.22412872314, 167970.1805114746, 2704.9779891967773, 1444.2920684814453],
    [9000, 261177.99282073975, 531471.4908599854, 210965.4664993286, 3167.3669815063477, 1441.6694641113281],
    [10000, 326796.9846725464, 674056.3154220581, 261367.65480041504, 3327.775001525879, 1809.7162246704102]
]


sizes = [row[0] for row in data]
alg1 = [row[1] for row in data]  
alg2 = [row[2] for row in data] 
alg3 = [row[3] for row in data]  
alg4 = [row[4] for row in data]  
alg5 = [row[5] for row in data] 

bar_width = 0.2
index = np.arange(len(sizes))

# Crear las barras para cada algoritmo
plt.bar(index, alg1, bar_width, label="Insertion Sort", color='blue')
plt.bar(index + bar_width, alg2, bar_width, label="Bubble Sort", color='green')
plt.bar(index + 2 * bar_width, alg3, bar_width, label="Selection Sort", color='pink')
plt.bar(index + 3 * bar_width, alg4, bar_width, label="Merge Sort", color='red')
plt.bar(index + 4 * bar_width, alg5, bar_width, label="Quick Sort", color='purple')

# Etiquetas y título
plt.xlabel('Longitud de los datos')
plt.ylabel('Tiempo (milisegundos)')
plt.title('Tiempos de ejecución de algoritmos de ordenamiento')

# Configurar los ticks y la leyenda
plt.xticks(index + 1.5 * bar_width, sizes, rotation=45)
plt.legend()

# Mostrar el gráfico
plt.tight_layout()
plt.show()